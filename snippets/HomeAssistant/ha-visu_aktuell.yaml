#########################################################################################################################
#
# Komplette Home Assistant Lovelace Dashboard Seite
# !!! erfordert card-mod, button-card und plotly graph card add-on's (--> Installation mit HACS im linken Button-Bereich)
# !!! basiert auf den Sensors-Definitionen meines Projekts - ein anderer Sensor-Aufbau erfordert viele Anpassungen
#
# Installation:
# - alles unterhalb dieses Kommentars (ab type:) markieren und kopieren/Ctrl-C (diesen Kommentar unbedingt weglassen!)
# - auf einem beliebigen Dashboard eine neue Seite vom Typ 'Panel (1 Karte)' anlegen; Name beliebig, speichern
# - 'Karte hinzufügen' anklicken, in der Auswahl ganz nach unten scrollen
# - als Typ auswählen: Manuell (benutzerdefiniert bzw YAML manuell erstellen)
# - in den Code-Bereich klicken und Ctrl-V (=Paste), speichern
#
#########################################################################################################################

type: horizontal-stack
name: dashboard_komplett
cards:
  - name: ~~ links ~~
    type: vertical-stack
    style:
      margin_left: 2vh
    card_mod:
      style: |
        ha-card { 
          background: transparent;
          padding: 5%;
        }   
    cards:
      - name: linksoben
        type: picture-elements
        show_state: false
        show_name: false
        image: /local/trovis557x/images/highres_transparent.png
        card_mod:
          style: |
            ha-card { 
              /** --ha-card-border-color: #990000; **/
              --ha-card-border-radius: 0px; 
              --ha-card-border-width: 0px;
              --card-mod-icon-color: white;
              margin-left: 2vh;
              margin-top: 2vh;
              width: 47vw !important;
              height: 44vh !important;
              background: transparent;
            }
        elements:
          - type: image
            entity: sensor.trovis_regler_gesamtstatus
            state_image:
              "0": /local/trovis557x/images/gesamtstatus/status-0.svg
              "1": /local/trovis557x/images/gesamtstatus/status-1.svg
              "2": /local/trovis557x/images/gesamtstatus/status-2.svg
              "3": /local/trovis557x/images/gesamtstatus/status-3.svg
              "4": /local/trovis557x/images/gesamtstatus/status-4.svg
              "5": /local/trovis557x/images/gesamtstatus/status-5.svg
              "6": /local/trovis557x/images/gesamtstatus/status-6.svg
              "7": /local/trovis557x/images/gesamtstatus/status-7.svg
              "8": /local/trovis557x/images/gesamtstatus/status-8.svg
              "9": /local/trovis557x/images/gesamtstatus/status-9.svg
            style:
              top: 0%
              left: 0%
              transform: translate(0%,0%)
              z-index: 100;
            tap_action:
              action: navigate
              navigation_path: trovis-einstellungen
          - type: state-label
            title: AT
            entity: sensor.trovis_fuhler_aussen_1_af1
            style:
              color: white
              left: 4%
              top: 2%
            tap_action:
              action: more-info
          - type: state-label
            title: SF1
            entity: sensor.trovis_fuhler_speicher_1_sf1
            style:
              color: white
              left: 51%
              top: 5%
            tap_action:
              action: more-info
          - type: state-label
            title: RueF1
            entity: sensor.trovis_fuhler_rucklauf_1_ruf1
            style:
              color: white
              left: 35%
              top: 39%
            tap_action:
              action: more-info
          - type: state-label
            title: RK1_%
            entity: sensor.trovis_hk1_3pkt_stellsignal
            suffix: "%"
            style:
              color: white
              left: 40%
              top: 55%
            tap_action:
              action: more-info
          - type: state-label
            title: RueF1
            entity: sensor.trovis_fuhler_vorlauf_1_vf1
            style:
              color: white
              left: 72%
              top: 57%
            tap_action:
              action: more-info
      - name: links_unten
        show_name: false
        title: Trovis Regler
        type: custom:button-card
        card_mod:
          style: |
            ha-card { 
            /*  --ha-card-border-radius: 0px; 
              --ha-card-border-color: #990000;
              --ha-card-border-width: 1px; */
              --card-mod-icon-color: white;
              margin-top: -3vh;
              margin-left: 2vh;
              width: 47vw !important;
              height: 46vh !important;
              background: transparent;
              overflow: hidden;
            }
        aspect_ratio: 8/4.5
        entity: none
        variables:
          var_weather_entity: weather.forecast_zu_hause
        styles:
          card:
            - background-color: lightgray
            - border-radius: 0
            - border: 6px gray inset
            - padding: 1%
          grid:
            - grid-template-areas: |
                "samson anlage modell"
                "button1 display display"
                "button1 display display"
                "button2 display display"
                "button2 chart chart"
                "button3 chart chart"
                "button3 chart chart"
            - grid-template-rows: 0.1fr 1fr min-content min-content min-content 1fr
            - grid-template-columns: 1fr 2fr 1fr
            - gap: 0.5 rem
          custom_fields:
            samson:
              - justify-self: start
              - align-self: end
              - margin-top: 0px
              - font-size: 1.5em
              - background-color: transparent
            anlage:
              - justify-self: start
              - align-self: end
              - margin-top: 0px
              - font-size: 8px
              - background-color: transparent
            modell:
              - justify-self: end
              - align-self: end
              - margin-top: 0px
              - font-size: 1.5em
              - background-color: transparent
            button1:
              - justify-self: start
              - align-self: start
              - margin-right: 5px
              - "--ha-card-background": transparent
              - "--ha-card-border-radius": 0px
              - width: 75%
            button2:
              - justify-self: start
              - align-self: mid
              - margin-right: 5px
              - "--ha-card-background": transparent
              - "--ha-card-border-radius": 0px
              - width: 75%
            button3:
              - justify-self: start
              - align-self: end
              - margin-right: 5px
              - "--ha-card-background": transparent
              - "--ha-card-border-radius": 0px
              - width: 75%
            display:
              - justify-self: start
              - align-self: start
              - background-color: "#a6a9a0"
              - "--ha-card-border-radius": 0px
              - height: 100% !important
              - width: 100% !important
              - padding: 0
              - margin: 0
              - border: 2px inset
            chart:
              - "--ha-card-background": transparent
              - "--ha-card-border-radius": 0px
              - margin: 0
              - margin-right: "-5px !important"
              - height: 100%
        custom_fields:
          samson:
            card:
              type: custom:button-card
              name: |
                [[[ return 'Samson' ]]]
              styles:
                card:
                  - color: black
                  - background: transparent
                  - font-size: 1em
                  - font-weight: bold
          anlage:
            card:
              type: custom:button-card
              name: |
                [[[
                  let version = states['sensor.trovis_regler_firmwareversion'].state;
                  let anlage = states['sensor.trovis_regler_hydraulik_anlage'].state
                  return '<small>Anlage ' + anlage + ', Firmware ' + version + '</small>'
                ]]]
              styles:
                card:
                  - color: black
                  - background: transparent
          modell:
            card:
              type: custom:button-card
              name: |
                [[[
                  let modell = states['sensor.trovis_regler_modell'].state;
                  return 'Trovis ' + modell
                ]]]
              styles:
                card:
                  - color: black
                  - background: transparent
                  - font-size: 1em
                  - font-weight: bold
          button1:
            card:
              type: picture
              image: |
                [[[
                  let stat = states['sensor.trovis_regler_schalter_oben'].state;
                  return '/local/trovis557x/images/drehschalter/typ1-stellung-' + stat + '.png'
                ]]]
              tap_action:
                action: call-service
                service: input_number.set_value
                service_data:
                  entity_id: input_number.trovis_visu_heizkreis
                  value: |-
                    [[[
                      return states['sensor.trovis_regler_button1_click'].state;
                    ]]]
              double_tap_action:
                action: call-service
                service: input_number.set_value
                service_data:
                  entity_id: input_number.trovis_visu_heizkreis
                  value: |-
                    [[[
                      return states['sensor.trovis_regler_button1_doubleclick'].state;
                    ]]]
          button2:
            card:
              type: picture
              image: |
                [[[
                  let stat = states['sensor.trovis_regler_schalter_mitte'].state;
                  return '/local/trovis557x/images/drehschalter/typ2-stellung-' + stat + '.png'
                ]]]
              tap_action:
                action: call-service
                service: input_number.set_value
                service_data:
                  entity_id: input_number.trovis_visu_heizkreis
                  value: |-
                    [[[
                      return states['sensor.trovis_regler_button2_click'].state;
                    ]]]
              double_tap_action:
                action: call-service
                service: input_number.set_value
                service_data:
                  entity_id: input_number.trovis_visu_heizkreis
                  value: |-
                    [[[
                      return states['sensor.trovis_regler_button2_doubleclick'].state;
                    ]]]
          button3:
            card:
              type: picture
              image: |
                [[[
                  let stat = states['sensor.trovis_regler_schalter_unten'].state;
                  return '/local/trovis557x/images/drehschalter/typ3.0-stellung-' + stat + '.png'
                ]]]
              tap_action:
                action: call-service
                service: input_number.set_value
                service_data:
                  entity_id: input_number.trovis_visu_heizkreis
                  value: |-
                    [[[
                      return states['sensor.trovis_regler_button3_click'].state;
                    ]]]
              double_tap_action:
                action: call-service
                service: input_number.set_value
                service_data:
                  entity_id: input_number.trovis_visu_heizkreis
                  value: |-
                    [[[
                      return states['sensor.trovis_regler_button3_doubleclick'].state;
                    ]]]
          display:
            card:
              type: custom:button-card
              aspect_ratio: 8/2.5
              tap_action:
                action: navigate
                navigation_path: trovis-plots
              name: |
                [[[
                  /*******************
                  Display rechts oben
                  ********************/
                  let AF1 =  states['sensor.trovis_fuhler_aussen_1_af1'].state;
                  if (AF1 == 'unavailable' || AF1 == 'unknown') { AF = '---' };
                  let AF1_24_min =  states['sensor.trovis_stat_af1_24h_min'].state;
                  if (AF1_24_min == 'unavailable') { AF1_24_min = '---' };
                  let AF1_24_max =  states['sensor.trovis_stat_af1_24h_max'].state;
                  if (AF1_24_max == 'unavailable') { AF1_24_max = '---' };
                  let AF1_7d_min =  states['sensor.trovis_stat_af1_7d_min'].state;
                  if (AF1_7d_min == 'unavailable') { AF1_7d_min = '---' };
                  let AF1_7d_max =  states['sensor.trovis_stat_af1_7d_max'].state;
                  if (AF1_7d_max == 'unavailable') { AF1_7d_max = '---' };
                  
                  let VF1 =  states['sensor.trovis_fuhler_vorlauf_1_vf1'].state;
                  if (VF1 == 'unavailable' || VF1 == 'unknown') { VF = '---' };
                  let VF1_24_min =  states['sensor.trovis_stat_vf1_24h_min'].state;
                  if (VF1_24_min == 'unavailable') { VF1_24_min = '---' };
                  let VF1_24_max =  states['sensor.trovis_stat_vf1_24h_max'].state;
                  if (VF1_24_max == 'unavailable') { VF1_24_max = '---' };
                  let VF1_7d_min =  states['sensor.trovis_stat_vf1_7d_min'].state;
                  if (VF1_7d_min == 'unavailable') { VF1_7d_min = '---' };
                  let VF1_7d_max =  states['sensor.trovis_stat_vf1_7d_max'].state;
                  if (VF1_7d_max == 'unavailable') { VF1_7d_max = '---' };

                  let RUEF1 =  states['sensor.trovis_fuhler_rucklauf_1_ruf1'].state;
                  if (RUEF1 == 'unavailable' || RUEF1 == 'unknown') { RUEF1 = '---' };
                  let RUEF1_24_min =  states['sensor.trovis_stat_ruef1_24h_min'].state;
                  if (RUEF1_24_min == 'unavailable') { RUEF1_24_min = '---' };
                  let RUEF1_24_max =  states['sensor.trovis_stat_ruef1_24h_max'].state;
                  if (RUEF1_24_max == 'unavailable') { RUEF1_24_max = '---' };
                  let RUEF1_7d_min =  states['sensor.trovis_stat_ruef1_7d_min'].state;
                  if (RUEF1_7d_min == 'unavailable') { RUEF1_7d_min = '---' };
                  let RUEF1_7d_max =  states['sensor.trovis_stat_ruef1_7d_max'].state;
                  if (RUEF1_7d_max == 'unavailable') { RUEF1_7d_max = '---' };

                  let SF1 =  states['sensor.trovis_fuhler_speicher_1_sf1'].state;
                  if (SF1 == 'unavailable' || SF1 == 'unknown') { SF = '---' };
                  let SF1_24_min =  states['sensor.trovis_stat_sf1_24h_min'].state;
                  if (SF1_24_min == 'unavailable') { SF1_24_min = '---' };
                  let SF1_24_max =  states['sensor.trovis_stat_sf1_24h_max'].state;
                  if (SF1_24_max == 'unavailable') { SF1_24_max = '---' };
                  let SF1_7d_min =  states['sensor.trovis_stat_sf1_7d_min'].state;
                  if (SF1_7d_min == 'unavailable') { SF1_7d_min = '---' };
                  let SF1_7d_max =  states['sensor.trovis_stat_sf1_7d_max'].state;
                  if (SF1_7d_max == 'unavailable') { SF1_7d_max = '---' };
                  
                  return `

                    <div style="height:12vh !important;font-size: 180%; font-family:'mydsdigib';
                     padding-left: 10px; padding-right: 10px;">
                      <table height="100%" width="100%">

                       <colgroup>
                          <col width=10%>
                          <col width=30% align=char char=".">
                          <col width=30% align=char char=".">
                          <col width=30% align=char char=".">
                       </colgroup>

                        <tr align=right>
                          <th></th>
                          <th>&nbsp;<span style="font-size:small">aktuell</span></th>
                          <th><span style="font-size:small">min/max 24h</span></th>
                          <th><span style="font-size:small">min/max  7 Tage</span></th>
                        </tr>
                        </x-small>
                        
                        <tr align=right>
                          <td align=left>AF1</td>
                          <td>${AF1} °C</td>
                          <td>${AF1_24_min} / ${AF1_24_max}</td>
                          <td>${AF1_7d_min} / ${AF1_7d_max}</td>
                        </tr>

                        <tr align=right>
                          <td align=left>VF1</td>
                          <td>${VF1} °C</td>
                          <td>${VF1_24_min} / ${VF1_24_max}</td>
                          <td>${VF1_7d_min} / ${VF1_7d_max}</td>
                        </tr>

                        <tr align=right>
                          <td align=left>RueF1</td>
                          <td>${RUEF1} °C</td>
                          <td>${RUEF1_24_min} / ${RUEF1_24_max}</td>
                          <td>${RUEF1_7d_min} / ${RUEF1_7d_max}</td>
                        </tr>

                        <tr align=right>
                          <td align=left>SF1</td>
                          <td>${SF1} °C</td>
                          <td>${SF1_24_min} / ${SF1_24_max}</td>
                          <td>${SF1_7d_min} / ${SF1_7d_max}</td>
                        </tr>
                        
                      </table>
                    </div>
                  `
                ]]]
              styles:
                card:
                  - color: black
                  - background: transparent
                  - padding: 0
                  - margin: 0
                  - height: 90% !important
                name:
                  - padding: 5
                  - margin: 5
                  - width: 100%
                  - height: 100% !important
          chart:
            card:
              type: custom:stack-in-card
              layout_type: grid
              card_mod:
                style: |
                  ha-card { 
                    --ha-card-border-radius: 0px; 
                    /** --ha-card-border-color: #990000; **/
                    --ha-card-border-width: 0px;
                    --card-mod-icon-color: white;
                    margin-left: 0;
                    margin-top: 0;
                    margin-right: -1vh;
                    margin-bottom: 1vh;
                    width: 100% !important;
                    /**height: 10vh !important;**/
                    background: transparent;
                    /**background-size: contain;**/
                  }
              styles:
                card:
                  - height: 80% !important
              cards:
                - type: conditional
                  conditions:
                    - condition: state
                      entity: input_number.trovis_visu_heizkreis
                      state: "4.0"
                  card:
                    card_mod:
                      style: |
                        ha-card { 
                          /** --ha-card-border-radius: 0px; 
                          --ha-card-border-color: #990000;
                          --ha-card-border-width: 2px; **/
                          --card-mod-icon-color: white;
                          margin: 0vh;
                          width: 100% !important;
                          background: transparent;
                        }
                    type: picture-elements
                    image: /local/trovis557x/images/1px_transparent.png
                    elements:
                      - type: image
                        image: /local/trovis557x/images/wasserspeicher.svg
                        style:
                          top: 0%
                          left: 0%
                          transform: translate(0%,-2%)
                          pointer-events: none
                          margin-right: "-10px"
                      - type: state-label
                        title: max_vl
                        prefix: "Vorlauf max. "
                        entity: sensor.trovis_hk4_maxladetemperatur_tw
                        style:
                          color: black
                          left: 92%
                          top: 3%
                          font-weight: bold
                          font-size: x-small
                        tap_action:
                          action: more-info
                      - type: state-label
                        title: max_rl
                        prefix: "Primär-Rücklauf max. "
                        entity: sensor.trovis_hk4_maxrl_tw
                        style:
                          color: black
                          left: 89%
                          top: 27%
                          font-weight: bold
                          font-size: x-small
                        tap_action:
                          action: more-info
                      - type: state-label
                        title: lade_temp
                        entity: sensor.trovis_hk4_ww_ladetemperatur
                        prefix: "Vorlaufsoll (IST+Überhöhung): "
                        style:
                          font-weight: bold
                          color: black
                          left: 53%
                          top: 3.1%
                          font-size: x-small
                      - type: state-label
                        title: tag_temps
                        entity: sensor.trovis_hk4_ww_tagestemperaturen
                        style:
                          font-size: small
                          color: black
                          left: 29%
                          top: 9%
                      - type: state-label
                        title: nacht_temps
                        entity: sensor.trovis_hk4_ww_nachttemperaturen
                        style:
                          font-size: small
                          color: black
                          left: 29%
                          top: 22%
                      - type: state-label
                        title: ist_sf1
                        entity: sensor.trovis_fuhler_speicher_1_sf1
                        style:
                          color: black
                          left: 29%
                          top: 15.5%
                          font-size: x-large
                          font-family: mydsdigib
                        tap_action:
                          action: more-info
                      - type: custom:button-card
                        title: ww-infos
                        name: |
                          [[[
                            /*******************
                            Info WW-Kreis rechts
                            ********************/
                            let sollwert=parseInt(states['sensor.trovis_hk4_soll_tw'].state);
                            let haltewert=parseInt(states['sensor.trovis_hk4_haltewert_tw'].state);
                            let schaltdifferenz=parseInt(states['sensor.trovis_hk4_schaltdifferenz_tw'].state);
                            let ueberhoehung=parseInt(states['sensor.trovis_hk4_ueberhoehung_tw'].state);
                            let schalter_min=parseInt(states['sensor.trovis_hk4_minsoll_tw'].state);
                            let schalter_max=parseInt(states['sensor.trovis_hk4_maxsoll_tw'].state);
                            let vl_max=parseInt(states['sensor.trovis_hk4_maxladetemperatur_tw'].state);
                            let rl_max=parseInt(states['sensor.trovis_hk4_maxrl_tw'].state);
                            let zwischenheizen=states['binary_sensor.trovis_hk4_zwischenheizbetrieb'].state;
                            if (zwischenheizen == 'off') {
                              zwischenheizen = "AUS"
                            } else {
                              zwischenheizen = "20'/10'"
                            }
                            return `
                              <div style="text-align:left; color:black; font-size:small">
                                <table height="100%" width="100%">
                                  <tr><td>Drehschalterlimits:&nbsp; </td><td align=right>${schalter_min}-${schalter_max} °C</td></tr>
                                  <tr><td>Sollwert:</td><td align=right>${sollwert} °C</td></tr>
                                  <tr><td>Haltewert:</td><td align=right>${haltewert} °C</td></tr>
                                  <tr><td>Schaltdifferenz:</td><td align=right>${schaltdifferenz} °C</td></tr>
                                  <tr><td>Überhöhung:</td><td align=right>${ueberhoehung} °C</td></tr>
                                  <tr><td>Zwischenheizen:</td><td align=right>${zwischenheizen}</td></tr>
                                </table>
                              </div>
                            `
                          ]]]
                        show:
                          icon: false
                          name: true
                          state: true
                        style:
                          left: 86%
                          top: 15.5%
                          border-style: inset
                          width: 9vw
                - type: conditional
                  conditions:
                    - condition: state
                      entity: input_number.trovis_visu_heizkreis
                      state: "0.0"
                  card:
                    type: picture-elements
                    elements:
                      - type: state-badge
                        entity: sensor.trovis_stat_af1_24h_min
                        style:
                          top: 32%
                          left: 90%
                    image: /local/trovis557x/images/wasserspeicher.svg
                - type: conditional
                  conditions:
                    - condition: or
                      conditions:
                        - condition: state
                          entity: input_number.trovis_visu_heizkreis
                          state: "1.0"
                        - condition: state
                          entity: input_number.trovis_visu_heizkreis
                          state: "2.0"
                        - condition: state
                          entity: input_number.trovis_visu_heizkreis
                          state: "3.0"
                  card:
                    type: custom:plotly-graph
                    name: heizkurve
                    card_mod:
                      style: |
                        ha-card { 
                          /** --ha-card-border-radius: 0px; 
                          --ha-card-border-color: #990000;
                          --ha-card-border-width: 2px; **/
                          --card-mod-icon-color: white;
                          width: 100% !important;
                          height: 20vh;
                        }
                    title: ""
                    raw_plotly_config: true
                    config:
                      displaylogo: false
                      responsive: true
                    style: |
                      ha-card {
                        border: solid 2px var(--primary-color);
                      }
                    entities:
                      - entity: ""
                        name: Aktuell
                        mode: markers
                        marker:
                          color: grey
                          size: 15
                          line:
                            color: black
                            width: 3
                          symbol: diamond
                        x:
                          - |-
                            [[[
                              /* replaces: '$ex hass.states['sensor.trovis_fuhler_aussen_1_af1'].state' */
                              return states['sensor.trovis_fuhler_aussen_1_af1'].state;
                            ]]]
                        "y":
                          - |-
                            [[[
                              /* replaces: '$ex hass.states['sensor.trovis_fuhler_vorlauf_1_vf1'].state' */
                              return states['sensor.trovis_fuhler_vorlauf_1_vf1'].state;
                            ]]]
                      - entity: input_number.trovis_visu_heizkreis
                      - name: Heizkurve
                        entity: ""
                        line:
                          shape: spline
                          color: black
                        fn: >
                          $fn ({ vars, state }) => { /* just left as a dummy,
                          previously used for $ex below */ }
                        x: |
                          [[[
                            /* replaces: 'x: $ex JSON.parse(JSON.stringify(vars.trovis_hk123_x))' */
                            return states['sensor.trovis_hk123_heizkurven'].attributes.x_werte;
                          ]]]
                        "y": |
                          [[[
                            /* replaces: '"y": $ex JSON.parse(JSON.stringify(vars.trovis_y')); */
                            let kreis = parseInt(states['input_number.trovis_visu_heizkreis'].state);
                            if (kreis == 1) { return states['sensor.trovis_hk123_heizkurven'].attributes.hk1; }
                            else if (kreis == 2) {return states['sensor.trovis_hk123_heizkurven'].attributes.hk2; }
                            else if (kreis == 3) { return states['sensor.trovis_hk123_heizkurven'].attributes.hk3; }
                          ]]]
                    layout:
                      title:
                        text: |
                          [[[
                            /* replaces: $ex 'Heizkreis ' + parseInt(vars.heizkreis); */
                            return 'Heizkreis ' + parseInt(states['input_number.trovis_visu_heizkreis'].state);
                          ]]]
                        x: 0.045
                        "y": 0.9
                        font:
                          family: Arial
                          size: 20
                          color: black
                          font-face: bold
                      annotations:
                        - xref: paper
                          yref: paper
                          align: left
                          x: 0.04
                          "y": 0.85
                          font:
                            size: 12
                            color: black
                          text: |
                            [[[
                              /*********************
                              Info im Plot inks oben
                              **********************/
                              let button, current_mode, text, kreis, modus;
                              kreis = parseInt(states['input_number.trovis_visu_heizkreis'].state);
                              if (kreis == 4) {
                                text = 'WW';
                                button = 1;
                              } else {
                                if (kreis == 1)      { button = 'oben' }
                                else if (kreis == 2) { button = 'mitte' }
                                else if (kreis == 3) { button = 'unten' }
                                else { button = 'oben' }
                                current_mode = parseInt(states['sensor.trovis_regler_schalter_' + button].state);
                                if      (current_mode == 0)  { text = 'Drehschalter auf Einstellungen' }
                                else if (current_mode == 2)  { text = 'Aus / Frostschutzmodus' }
                                else if (current_mode == 3)  { text = 'Handbetrieb' }
                                else if (current_mode == 4)  { text = 'Tagbetrieb' }
                                else if (current_mode == 5)  { text = 'Nachtbetrieb' }
                                else if (current_mode == 10) { text = 'Fehler - 2 Drehschalter auf Einstellung?' }
                                else if (current_mode == 1)  { 
                                  modus = states['sensor.trovis_regler_hk' + kreis + '_betriebsart_formatiert'].state;
                                  if (modus == 'Stdby') { modus = 'Standby' }
                                  else if (modus == 'Sonne') { modus = 'Tag' }
                                  else if (modus == 'Mond') { modus = 'Nacht' }
                                  text = 'Automatikbetrieb, ' + modus + 'modus';
                                }
                                else { text = 'Betriebsart nicht verfügbar'; }
                              }
                              return text;
                            ]]]
                          showarrow: false
                        - xref: paper
                          yref: paper
                          x: 0.99
                          "y": 0.1
                          align: right
                          textposition: bottom right
                          font:
                            family: Arial
                            size: 12
                            color: black
                          text: |
                            [[[
                              /************************
                              Info im Plot rechts unten
                              *************************/
                              let kreis, niveau, steigung, vlmin, vlmax, vlsoll, vlist, tagsoll, nachtsoll;
                              kreis = Math.floor(states['input_number.trovis_visu_heizkreis'].state);
                              if (kreis === 4)
                                return 'WW';
                              else
                                niveau=Math.floor(states['sensor.trovis_hk'+kreis+'_niveau'].state);
                                steigung=states['sensor.trovis_hk'+kreis+'_steigung'].state;
                                vlmin=Math.floor(states['sensor.trovis_hk'+kreis+'_vl_min'].state);
                                vlmax=Math.floor(states['sensor.trovis_hk'+kreis+'_vl_max'].state);
                                tagsoll=Math.floor(states['sensor.trovis_hk'+kreis+'_raumsoll_tag'].state);
                                nachtsoll=Math.floor(states['sensor.trovis_hk'+kreis+'_raumsoll_nacht'].state);
                                vlsoll=states['sensor.trovis_hk'+kreis+'_vorlaufsoll'].state;
                                if (vlsoll == 'unavailable') { vlsoll = '---'; };
                                vlist=states['sensor.trovis_fuhler_vorlauf_'+kreis+'_vf'+kreis].state;
                                return 'Steigung / Niveau: ' + steigung + ' / ' + niveau + ' °C<br>' +
                                  'Vorlaufbegrenzung: ' + vlmin + '...' + vlmax + ' °C<br>' +
                                  'Raumsoll Tag / Nacht: ' + tagsoll + ' / ' + nachtsoll + ' °C<br>' +
                                  'Vorlaufsoll vs. IST: ' + vlsoll + ' ./. ' + vlist + ' °C';
                            ]]]
                          showarrow: false
                      showlegend: false
                      autosize: false
                      paper_bgcolor: rgba(0,0,0,0)
                      plot_bgcolor: rgba(0,0,0,0)
                      border: 1px
                      margin:
                        l: 1
                        b: 3
                        r: 5
                        t: 5
                        pad: 0
                      xaxis:
                        showlegend: false
                        linecolor: grey
                        linewidth: 1
                        mirror: true
                        ticklabelposition: inside
                        type: number
                        range:
                          - 20
                          - -20
                      yaxis:
                        fixedrange: false
                        linecolor: grey
                        linewidth: 1
                        mirror: true
                        ticklabelposition: inside
  - name: ~~ rechts ~~
    type: vertical-stack
    cards:
      - name: R1
        type: custom:plotly-graph
        card_mod:
          style: |
            ha-card { 
                --ha-card-border-radius: 0px; 
                --ha-card-border-color: #grey;
                --ha-card-border-width: 1px;
                --card-mod-icon-color: white;
                padding: 0;
                height: 30vh;
                /* height: 100% !important; */
                margin-left: 2%;
                width: 96%;
                background: transparent;
                transform: scale(0.9);
            }
        autosize: true
        paper_bgcolor: rgba(0,0,0,0)
        plot_bgcolor: rgba(0,0,0,0)
        border: 1px
        defaults:
          yaxes:
            fixedrange: true
        config:
          displaylogo: false
          responsive: true
        layout:
          title:
            text: Vorlauf und Rücklauf
            x: 0.5
            "y": 1.1
          margin:
            t: 0
            l: 0
            r: 0
            b: 5
            pad: 0
          paper_bgcolor: transparent
          plot_bgcolor: transparent
          xaxis:
            tickformat: "%a %H:%M"
            titlefont:
              color: white
            tickfont:
              color: white
            linewidth: 1
            ticklabelposition: inside
            type: number
            showlegend: true
            rangeselector:
              x: 0.8
              "y": 1.05
              buttons:
                - count: 12
                  step: hour
                - count: 1
                  step: day
                - count: 2
                  step: day
          yaxis:
            titlefont:
              color: white
            tickfont:
              color: white
            fixedrange: false
            linecolor: grey
            linewidth: 1
            mirror: true
            ticklabelposition: inside
            type: number
            range:
              - 20
              - 70
          yaxis2:
            titlefont:
              color: white
            tickfont:
              color: white
            fixedrange: false
            linecolor: grey
            linewidth: 1
            mirror: true
            ticklabelposition: inside
            type: number
        hours_to_show: 48
        refresh_interval: 60
        entities:
          - name: AT
            entity: sensor.trovis_fuhler_aussen_1_af1
            fillcolor: rgba(168, 216, 234, 0.1)
            fill: tozeroy
            line:
              shape: spline
              color: lightgrey
              smoothing: 0.2
            yaxis: y2
          - name: Vorlauf sekundär
            entity: sensor.trovis_fuhler_vorlauf_1_vf1
            line:
              shape: spline
              color: red
              width: 2
            yaxis: y1
          - name: Rücklauf primär
            entity: sensor.trovis_fuhler_rucklauf_1_ruf1
            line:
              shape: spline
              color: "#00b0f0"
              width: 2
      - type: custom:plotly-graph
        card_mod:
          style:
            .: |
              ha-card { 
                --ha-card-border-radius: 0px; 
                --ha-card-border-color: #grey;
                --ha-card-border-width: 1px;
                --card-mod-icon-color: white;
                padding: 0;
                height: 30vh;
                /* height: 100% !important; */
                margin-left: 2%;
                width: 96%;
                background: transparent;
                transform: scale(0.9);
              }
        autosize: true
        defaults:
          yaxes:
            fixedrange: true
        config:
          displaylogo: false
          responsive: true
        layout:
          title:
            text: Warmwasser
            x: 0.5
            "y": 1.1
          paper_bgcolor: transparent
          plot_bgcolor: transparent
          margin:
            t: 0
            l: 0
            r: 0
            b: 5
            pad: 0
          xaxis:
            showlegend: true
          yaxis:
            type: number
            titlefont:
              color: white
            tickfont:
              color: white
            fixedrange: false
            linecolor: grey
            linewidth: 1
            mirror: true
            ticklabelposition: inside
            range:
              - 45
              - 65
          yaxis2:
            titlefont:
              color: white
            tickfont:
              color: white
            fixedrange: false
            linecolor: grey
            linewidth: 1
            mirror: true
            ticklabelposition: inside
            type: boolean
            range:
              - 0
              - 1
        hours_to_show: 48
        refresh_interval: 60
        entities:
          - name: Speichertemperatur
            entity: sensor.trovis_fuhler_speicher_1_sf1
            layout:
              xaxis:
                showlegend: true
            line:
              shape: spline
              color: "#00b0f0"
              smoothing: 0.2
            fill: tozeroy
          - name: Erwärmung (SLP-Signal)
            entity: binary_sensor.trovis_hk4_speicherladepumpe
            line:
              color: lightgrey
            fill: tozeroy
            yaxis: y2
      - type: custom:plotly-graph
        card_mod:
          style:
            .: |
              ha-card {
                --ha-card-border-radius: 0px; 
                --ha-card-border-color: #grey;
                --ha-card-border-width: 1px;
                --card-mod-icon-color: white;
                padding: 0;
                height: 30vh;
                /* height: 100% !important; */
                margin-left: 2%;
                width: 96%;
                background: transparent;
                transform: scale(0.9);
              }
        autosize: true
        defaults:
          yaxes:
            fixedrange: true
        config:
          displaylogo: false
          responsive: true
        layout:
          title:
            text: Pumpen und Ventile
            x: 0.5
            "y": 1.1
          paper_bgcolor: transparent
          plot_bgcolor: transparent
          margin:
            t: 0
            l: 0
            r: 0
            b: 5
            pad: 0
          xaxis:
            showlegend: true
          yaxis:
            titlefont:
              color: white
            tickfont:
              color: white
            fixedrange: false
            linecolor: grey
            linewidth: 1
            mirror: true
            ticklabelposition: inside
            type: number
            range:
              - 0
              - 100
          yaxis2:
            titlefont:
              color: white
            tickfont:
              color: white
            fixedrange: false
            linecolor: grey
            linewidth: 1
            mirror: true
            ticklabelposition: inside
            type: boolean
            range:
              - 0
              - 1
        hours_to_show: 48
        refresh_interval: 60
        entities:
          - name: Stellventil %
            entity: sensor.trovis_hk1_3pkt_stellsignal
            line:
              shape: spline
              color: "#00b0f0"
            fill: tozeroy
          - name: 3Wege-Ventil Rk1/WW
            entity: binary_sensor.trovis_hk4_speicherladepumpe
            line:
              color: red
            yaxis: y2
          - name: UP1
            entity: binary_sensor.trovis_hk1_umwaelzpumpe
            line:
              color: rgba(211,211,211,0.1)
            fill: tozeroy
            yaxis: y2
